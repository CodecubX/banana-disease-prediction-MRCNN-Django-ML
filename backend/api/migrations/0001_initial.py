# Generated by Django 3.2.19 on 2023-06-21 15:32

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('username', models.CharField(max_length=150, unique=True, verbose_name='User Name')),
                ('first_name', models.CharField(max_length=150, verbose_name='First Name')),
                ('last_name', models.CharField(max_length=150, verbose_name='last Name')),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('profile_pic', models.ImageField(blank=True, max_length=500, null=True, upload_to='profile/')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Disease',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('healthy', 'Healthy'), ('yellow_leaf', 'Yellow Leaf'), ('anthracnose', 'Anthracnose')], max_length=200, unique=True)),
                ('description', models.TextField()),
                ('img', models.ImageField(blank=True, max_length=500, null=True, upload_to='disease/')),
            ],
        ),
        migrations.CreateModel(
            name='FertilizerPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stage', models.CharField(choices=[('vegetative', 'Vegetative'), ('pseudostem_formation', 'Pseudostem Formation'), ('shooting', 'Shooting'), ('inflorescence_initiation', 'Inflorescence Initiation'), ('flowering', 'Flowering'), ('fruit_development', 'Fruit Development'), ('harvest', 'Harvest')], default='vegetative', max_length=50)),
                ('fertilizer_type', models.CharField(choices=[('Organic Fertilizer', 'Organic Fertilizer'), ('Inorganic Fertilizer', 'Inorganic Fertilizer'), ('Slow-Release Fertilizer', 'Slow-Release Fertilizer'), ('Liquid Fertilizer', 'Liquid Fertilizer'), ('Balanced Fertilizer', 'Balanced Fertilizer'), ('Controlled-Release Fertilizer', 'Controlled-Release Fertilizer')], max_length=200, unique=True)),
                ('description', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Test',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('test', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Variety',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('variety', models.CharField(max_length=100, unique=True)),
                ('avg_harvesting_time', models.IntegerField()),
            ],
            options={
                'verbose_name_plural': 'Varieties',
            },
        ),
        migrations.CreateModel(
            name='WateringPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stage', models.CharField(choices=[('vegetative', 'Vegetative'), ('pseudostem_formation', 'Pseudostem Formation'), ('shooting', 'Shooting'), ('inflorescence_initiation', 'Inflorescence Initiation'), ('flowering', 'Flowering'), ('fruit_development', 'Fruit Development'), ('harvest', 'Harvest')], default='vegetative', max_length=50)),
                ('watering_plan', models.CharField(choices=[('every day', 'Every Day'), ('once every 2-3 days', 'Once Every 2-3 Days'), ('once every 3-4 days', 'Once Every 3-4 Days')], max_length=200, unique=True)),
                ('description', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='WateringPlanPrediction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pH', models.DecimalField(decimal_places=1, max_digits=3)),
                ('organic_matter_content', models.CharField(max_length=20)),
                ('soil_type', models.CharField(max_length=50)),
                ('soil_moisture', models.CharField(max_length=10)),
                ('avg_temperature', models.IntegerField()),
                ('avg_rainfall', models.IntegerField()),
                ('plant_height', models.IntegerField()),
                ('leaf_color', models.CharField(max_length=20)),
                ('stem_diameter', models.IntegerField()),
                ('plant_density', models.IntegerField()),
                ('soil_texture', models.CharField(max_length=20)),
                ('soil_color', models.CharField(max_length=20)),
                ('temperature', models.IntegerField()),
                ('humidity', models.IntegerField()),
                ('rainfall', models.IntegerField()),
                ('water_source', models.CharField(max_length=20)),
                ('irrigation_method', models.CharField(max_length=20)),
                ('fertilizer_used_last_season', models.CharField(max_length=20)),
                ('crop_rotation', models.CharField(max_length=5)),
                ('pest_disease_infestation', models.CharField(max_length=5)),
                ('slope', models.CharField(max_length=10)),
                ('top_probabilities', models.JSONField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('watering_plan', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='api.wateringplan')),
            ],
        ),
        migrations.CreateModel(
            name='HarvestPrediction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('predicted_harvest', models.CharField(max_length=20)),
                ('agro_climatic_region', models.CharField(max_length=100)),
                ('plant_density', models.IntegerField()),
                ('spacing_between_plants', models.FloatField()),
                ('pesticides_used', models.CharField(max_length=3)),
                ('plant_generation', models.CharField(max_length=10)),
                ('fertilizer_type', models.CharField(max_length=100)),
                ('soil_pH', models.FloatField()),
                ('amount_of_sunlight_received', models.CharField(max_length=100)),
                ('watering_schedule', models.CharField(max_length=100)),
                ('number_of_leaves', models.IntegerField()),
                ('height', models.FloatField()),
                ('harvest', models.CharField(max_length=50)),
                ('top_probabilities', models.JSONField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('variety', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='api.variety')),
            ],
        ),
        migrations.CreateModel(
            name='HarvestPractice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('practice_name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField()),
                ('variety', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.variety')),
            ],
        ),
        migrations.CreateModel(
            name='FertilizerPlanPrediction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pH', models.DecimalField(decimal_places=1, max_digits=3)),
                ('organic_matter_content', models.CharField(max_length=20)),
                ('soil_type', models.CharField(max_length=50)),
                ('soil_moisture', models.CharField(max_length=10)),
                ('avg_temperature', models.IntegerField()),
                ('avg_rainfall', models.IntegerField()),
                ('plant_height', models.IntegerField()),
                ('leaf_color', models.CharField(max_length=20)),
                ('stem_diameter', models.IntegerField()),
                ('plant_density', models.IntegerField()),
                ('soil_texture', models.CharField(max_length=20)),
                ('soil_color', models.CharField(max_length=20)),
                ('temperature', models.IntegerField()),
                ('humidity', models.IntegerField()),
                ('rainfall', models.IntegerField()),
                ('water_source', models.CharField(max_length=20)),
                ('irrigation_method', models.CharField(max_length=20)),
                ('fertilizer_used_last_season', models.CharField(max_length=20)),
                ('crop_rotation', models.CharField(max_length=5)),
                ('pest_disease_infestation', models.CharField(max_length=5)),
                ('slope', models.CharField(max_length=10)),
                ('fertilizer_plan', models.CharField(max_length=255)),
                ('top_probabilities', models.JSONField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('fertilizer_type', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='api.fertilizerplan')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DiseasePrediction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(blank=True, max_length=500, null=True, upload_to='disease_prediction/original')),
                ('detected_img', models.ImageField(blank=True, max_length=500, null=True, upload_to='disease_prediction/detected')),
                ('probabilities', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('disease', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='api.disease')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Cure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('img', models.ImageField(blank=True, max_length=500, null=True, upload_to='cure/')),
                ('disease', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.disease')),
            ],
        ),
    ]
